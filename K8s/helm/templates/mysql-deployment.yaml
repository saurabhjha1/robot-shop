apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
  labels:
    service: mysql
spec:
  replicas: 1
  selector:
    matchLabels:
      service: mysql
  template:
    metadata:
      labels:
        service: mysql
    spec:
      {{ if .Values.psp.enabled }}
      serviceAccountName: robot-shop
      {{ end }}
      containers:
      - name: mysql
        image: {{ .Values.image.repo }}/rs-mysql-db:{{ .Values.image.version }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        # added for Istio
        securityContext:
          capabilities:
            add: ["NET_ADMIN"]
        ports:
        - containerPort: 3306
        resources:
          {{ if .Values.databases.applyResourceLimits }}
          limits:
            cpu: 300m
            memory: 1400Mi
          {{ end }}
          requests:
            cpu: 300m
            memory: 1400Mi
        livenessProbe:
          exec:
            command: ["mysqladmin", "ping"]
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
        readinessProbe:
          exec:
             command:
             - sh
             - -c
             - "mysql -h 127.0.0.1 -e 'SELECT 1 FROM information_schema.tables WHERE table_schema = \"cities\" AND table_name = \"cities\" LIMIT 1;'"
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 1
      restartPolicy: Always
      {{- with .Values.mysql.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.mysql.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.mysql.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}